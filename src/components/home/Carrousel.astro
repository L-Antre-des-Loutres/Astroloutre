---
import Image from "astro/components/Image.astro";
import MC1 from "../../assets/panoramas/mc1.png?w=2000"
import MC2 from "../../assets/panoramas/mc2.png?w=2000"
import MC3 from "../../assets/panoramas/mc3.png?w=2000"
import MC4 from "../../assets/panoramas/mc4.png?w=2000"
import PAL1 from "../../assets/panoramas/pal1.jpg?w=2000"

const games = [
    {
        name: 'Minecraft',
        icon: 'https://www.minecraft.net/content/dam/minecraftnet/franchise/logos/Homepage_Download-Launcher_Creeper-Logo_500x500.png',
        logo: 'https://www.minecraft.net/content/dam/minecraftnet/games/minecraft/logos/Global-Header_MCCB-Logo_300x51.svg',
        slides: [
            MC1,
            MC2,
            MC3,
            MC4
        ],
        buttons: {
            servers: {
                title: "Nos serveurs",
                link: "/serveurs/minecraft"
            },
            classement: {
                title: "Classements",
                link: "/classements/minecraft"
            }
        }
    },
        {
            name: 'Palworld',
            icon: 'https://media.pcgamesinsider.biz/2024/1/125206/palworld-r225x225.jpg',
            logo: 'https://static.wixstatic.com/media/f8429d_3dc22015906f4c1e98dfc6e1d97267f0~mv2.png/v1/fill/w_980,h_337,al_c,q_85,usm_0.66_1.00_0.01,enc_avif,quality_auto/f8429d_3dc22015906f4c1e98dfc6e1d97267f0~mv2.png',
            slides: [
                PAL1
            ],
            buttons: {
                servers: {
                    title: "Nos serveurs",
                    link: "/serveurs/palworld"
                }
            }
        },
];
---
<div class="w-full">
    <div id="container-carrousel" class="w-full">

        <!-- MAP : Pour chaque jeu dans la variables games -->
        {games.map((game, i) => (

                <div class="w-screen hidden overflow-hidden" id="carrousel-game"
                     data-game={i}>

                    <div class="relative w-screen md:h-screen h-120 overflow-hidden" id={`carousel-${i}`}>

                        <!-- Image de fond du carrousel -->
                        {game.slides.map((src, j) => (
                                <Image
                                        src={src}
                                        alt={`${game.name} slide ${j + 1}`}
                                        class={`carousel-slide absolute top-0 left-0 w-screen h-full object-cover 
                                        transition-all duration-500 ease-in-out opacity-0 scale-105 translate-x-4`}
                                        id="carousel-slide"
                                        loading="lazy"
                                        width={100}
                                        height={100}
                                />
                        ))}

                        <!-- Container Logo des jeux -->
                        <div class="flex justify-center w-full">
                            <div class="bg-gradient-to-r from-brown-900/80 to-brown-700/80 text-white p-6 rounded-xl
                            absolute top-2/5 transform -translate-y-1/2 transition-all duration-500 opacity-0">

                                <Image src={game.logo} alt={game.name} class="w-100 h-100 object-contain"
                                       width={100} height={100}/>

                            </div>
                        </div>

                        <!-- Container Icone des jeux -->
                        <div class="absolute md:top-2/4 top-2/3 transform -translate-y-1/2 flex justify-center w-full gap-8">
                            {games.map((g, idx) => (
                                    <div
                                            class={`game-icon text-6xl cursor-pointer transform transition duration-300`}
                                            data-index={idx}
                                    >

                                        <!-- Icone des jeux -->
                                        <Image
                                                src={g.icon}
                                                alt={g.name}
                                                class="w-16 h-16 object-contain rounded-lg shadow-lg hover:shadow-2xl transition-all duration-300"
                                                width={100}
                                                height={100}
                                        />
                                    </div>
                            ))}
                        </div>

                        <!-- Boutons -->
                        <div class="absolute md:top-[65%] top-[80%] transform -translate-y-1/2 w-full flex justify-center gap-6 z-10">
                            {Object.values(game.buttons).map((btn) => (
                                    <a
                                            href={btn.link}
                                            class="text-white border border-white/90 font-semibold py-2 px-6 rounded-lg shadow-md backdrop-blur-md transition-all duration-300 hover:bg-white/10"
                                    >
                                        {btn.title}
                                    </a>
                            ))}
                        </div>

                    </div>
                </div>
        ))}
    </div>
</div>


<script type="module">
    let intervals = [];

    window.addEventListener("DOMContentLoaded", () => {
        const carousels = document.querySelectorAll('#carrousel-game');
        const icons = document.querySelectorAll('.game-icon');

        const showCarousel = (carousel, direction = 'right') => {
            carousel.classList.remove('hidden');
            const slides = carousel.querySelectorAll('.carousel-slide');
            const titleContainer = carousel.querySelector('.bg-gradient-to-r');

            slides.forEach(slide => {
                slide.classList.remove('translate-x-4', '-translate-x-4');
                slide.classList.add(direction === 'right' ? 'translate-x-4' : '-translate-x-4');
            });

            setTimeout(() => {
                slides[0].classList.add('opacity-100', 'scale-100');
                slides[0].classList.remove(direction === 'right' ? 'translate-x-4' : '-translate-x-4');
            }, 50);

            setTimeout(() => {
                if (titleContainer) {
                    titleContainer.style.opacity = '1';
                    titleContainer.style.transform = 'translateY(0)';
                }
            }, 300);
        };

        showCarousel(carousels[0]);

        const clearIntervals = () => {
            intervals.forEach(interval => clearInterval(interval));
            intervals = [];
        };

        const switchToGame = (gameIndex, currentCarousel) => {
            if (currentCarousel === carousels[gameIndex]) return;

            const direction = gameIndex > parseInt(currentCarousel.dataset.game) ? 'right' : 'left';

            clearIntervals();

            carousels.forEach(carousel => {
                const slides = carousel.querySelectorAll('.carousel-slide');
                const titleContainer = carousel.querySelector('.bg-gradient-to-r');

                slides.forEach(slide => {
                    slide.classList.remove('opacity-100', 'scale-100', 'translate-x-0');
                    slide.classList.add('opacity-0', 'scale-105');
                    slide.classList.add(direction === 'right' ? '-translate-x-4' : 'translate-x-4');
                });

                if (titleContainer) {
                    titleContainer.style.opacity = '0';
                    titleContainer.style.transform = 'translateY(-20px)';
                }

                setTimeout(() => {
                    carousel.classList.add('hidden');
                }, 300);
            });

            setTimeout(() => {
                showCarousel(carousels[gameIndex], direction);
            }, 300);

            startCarousel(carousels[gameIndex]);
        };

        icons.forEach((icon) => {
            icon.addEventListener('click', (e) => {
                const gameIndex = e.currentTarget.dataset.index;
                const currentCarousel = document.querySelector('#carrousel-game:not(.hidden)');
                switchToGame(gameIndex, currentCarousel);
            });
        });

        const startCarousel = (carousel) => {
            const slides = carousel.querySelectorAll('.carousel-slide');
            let current = 0;

            slides[current].classList.add('opacity-100', 'scale-100', 'translate-x-0');

            const interval = setInterval(() => {
                slides[current].classList.remove('opacity-100', 'scale-100', 'translate-x-0');
                slides[current].classList.add('opacity-0', 'scale-105', 'translate-x-4');
                current = (current + 1) % slides.length;
                setTimeout(() => {
                    slides[current].classList.remove('opacity-0', 'scale-105', 'translate-x-4');
                    slides[current].classList.add('opacity-100', 'scale-100', 'translate-x-0');
                }, 50);
            }, 5000);

            intervals.push(interval);
        };

        startCarousel(carousels[0]);

        // Initialize title containers
        document.querySelectorAll('.bg-gradient-to-r').forEach(container => {
            container.style.transition = 'all 0.5s ease-out';
            container.style.transform = 'translateY(-20px)';
        });

        // Show initial title with animation
        const initialTitleContainer = carousels[0].querySelector('.bg-gradient-to-r');
        if (initialTitleContainer) {
            setTimeout(() => {
                initialTitleContainer.style.opacity = '1';
                initialTitleContainer.style.transform = 'translateY(0)';
            }, 50);
        }
    });
</script>