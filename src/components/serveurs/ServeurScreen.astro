---
const {screenList} = Astro.props;

type Screen = {
    nom: string;
    auteur_pseudo: string;
    path: string;
}
---
<!-- CSS -->
<style>
    .serveur-screen {
        display: grid;
        gap: 1rem;
        padding: 1rem;
        grid-template-columns: repeat(3, 1fr); /* 2 colonnes égales */
    }

    @media (max-width: 1200px) {
        .serveur-screen {
            grid-template-columns: repeat(2, 1fr); /* 2 colonnes égales */
        }
    }

    @media (max-width: 750px) {
        .serveur-screen {
            grid-template-columns: 1fr; /* 1 colonne sur petits écrans */
        }
    }

    .screen-item {
        background-color: #f9fafb;
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        border: 1px solid #ddd;
        border-radius: 0.5rem;
        overflow: hidden;
        transition: transform 0.2s ease;
        padding: 0.5rem;
    }

    .screen-item img {
        width: 100%;
        height: 300px; /* Hauteur fixe pour toutes les images */
        object-fit: cover;
        border-radius: 0.5rem;
    }

    .screen-item:hover {
        transform: scale(1.02);
    }

    .author {
        margin-top: 0.5rem;
        font-size: 0.875rem;
        color: #555;
        font-style: italic;
    }
</style>

<!-- Contenu de la page -->
<div class="serveur-screen">
    {screenList.map((screen: Screen) => (
            <div class="screen-item">
                <img src={screen.path} alt={screen.nom}/>
                <p class="author">Par : {screen.auteur_pseudo || "Inconnu"}</p>
            </div>
    ))}
</div>