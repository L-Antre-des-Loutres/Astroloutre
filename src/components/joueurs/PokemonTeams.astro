---
import {formatPokemonName} from "../../formater/PokemonNameFormater.ts";
import {showdownApiGetPkmArt} from "../../utils/showdownApiGetPkmArt.ts";
import {fixEncoding} from "../../utils/fixEncoder";
import {UUIDToPseudo} from "../../utils/UUIDToPseudo";

// Type PokemonTeam
type PokemonTeam = {
    id: number,
    serveur_id: number,
    serveur_nom: number,
    joueur_uuid: string,
    pkmn1: string,
    pkmn1_form: string,
    pkmn2: string,
    pkmn2_form: string,
    pkmn3: string,
    pkmn3_form: string,
    pkmn4: string,
    pkmn4_form: string,
    pkmn5: string,
    pkmn5_form: string,
    pkmn6: string,
    pkmn6_form: string,
    pkmn6_shiny: boolean,
    pkmn5_shiny: boolean,
    pkmn4_shiny: boolean,
    pkmn3_shiny: boolean,
    pkmn2_shiny: boolean,
    pkmn1_shiny: boolean
    pkmn1_nickname: string,
    pkmn2_nickname: string,
    pkmn3_nickname: string,
    pkmn4_nickname: string,
    pkmn5_nickname: string,
    pkmn6_nickname: string,
    pkmn1_level: number,
    pkmn2_level: number,
    pkmn3_level: number,
    pkmn4_level: number,
    pkmn5_level: number,
    pkmn6_level: number,
    pkmn1_do_uuid: string,
    pkmn2_do_uuid: string,
    pkmn3_do_uuid: string,
    pkmn4_do_uuid: string,
    pkmn5_do_uuid: string,
    pkmn6_do_uuid: string,
}

const {uuid} = Astro.props;
// R√©cup√©ration des donn√©es des √©quipes Pok√©mon  
let pokemonTeams: PokemonTeam[] = [];
try {
    const res = await fetch(`https://otterlyapi.antredesloutres.fr/api/cobblemon/stats/${uuid}`);
    const json = await res.json();

    if (!json?.success) {
        throw new Error('Erreur lors de la r√©cup√©ration des donn√©es');
    }

    pokemonTeams = json.data ?? [];
} catch (error) {
    console.error('Error fetching Pokemon teams data:', error);
    throw error;
}
---
<div class="grid-container">
    {pokemonTeams.map((team) => (
            <div class="card">
                <h2 class="server-title">
                    {team.serveur_nom}
                    <button class="dropdown-toggle" aria-expanded="true">
                        <svg viewBox="0 0 24 24" width="28" height="28">
                            <path d="M7 10l5 5 5-5H7z" fill="currentColor"/>
                        </svg>
                    </button>
                </h2>

                <!-- üîπ Par d√©faut ouvert (pas de .collapse) -->
                <div class="pokemon-grid">
                    {[
                        {
                            pokemon: team.pkmn1,
                            form: team.pkmn1_form,
                            shiny: team.pkmn1_shiny,
                            nickname: team.pkmn1_nickname,
                            level: team.pkmn1_level,
                            do_uuid: team.pkmn1_do_uuid
                        },
                        {
                            pokemon: team.pkmn2,
                            form: team.pkmn2_form,
                            shiny: team.pkmn2_shiny,
                            nickname: team.pkmn2_nickname,
                            level: team.pkmn2_level,
                            do_uuid: team.pkmn2_do_uuid
                        },
                        {
                            pokemon: team.pkmn3,
                            form: team.pkmn3_form,
                            shiny: team.pkmn3_shiny,
                            nickname: team.pkmn3_nickname,
                            level: team.pkmn3_level,
                            do_uuid: team.pkmn3_do_uuid
                        },
                        {
                            pokemon: team.pkmn4,
                            form: team.pkmn4_form,
                            shiny: team.pkmn4_shiny,
                            nickname: team.pkmn4_nickname,
                            level: team.pkmn4_level,
                            do_uuid: team.pkmn4_do_uuid
                        },
                        {
                            pokemon: team.pkmn5,
                            form: team.pkmn5_form,
                            shiny: team.pkmn5_shiny,
                            nickname: team.pkmn5_nickname,
                            level: team.pkmn5_level,
                            do_uuid: team.pkmn5_do_uuid
                        },
                        {
                            pokemon: team.pkmn6,
                            form: team.pkmn6_form,
                            shiny: team.pkmn6_shiny,
                            nickname: team.pkmn6_nickname,
                            level: team.pkmn6_level,
                            do_uuid: team.pkmn6_do_uuid
                        },
                    ].map(async ({pokemon, form, shiny, nickname, level, do_uuid}) => (
                            <div class="card-image">
                                <img
                                        src={await showdownApiGetPkmArt(formatPokemonName(pokemon), form, shiny)}
                                        alt={formatPokemonName(pokemon)}
                                        class="pokemon-image"
                                />
                                <div class="pokemon-meta">
                                    <strong>{nickname ? fixEncoding(nickname) : formatPokemonName(pokemon).charAt(0).toUpperCase() + formatPokemonName(pokemon).slice(1).toLowerCase()}</strong><br/>
                                    Level: {level}<br/>
                                    DO: {await UUIDToPseudo(do_uuid)}
                                </div>
                                <div class="extra-details collapse">
                                    <p>Nature: ??</p>
                                    <p>Capacit√©s: ??</p>
                                    <p>Stats: ??</p>
                                </div>
                            </div>
                    ))}
                </div>
            </div>
    ))}
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const toggles = document.querySelectorAll('.server-title');
        toggles.forEach(btn => {
            btn.addEventListener('click', () => {
                const card = btn.closest('.card');
                const grid = card.querySelector('.pokemon-grid');
                const expanded = grid.classList.toggle('compact'); // toggle compact view

                // rotation de la fl√®che
                btn.querySelector('svg').style.transform = expanded ? 'rotate(180deg)' : 'rotate(0deg)';

                // Toggle des d√©tails suppl√©mentaires
                const extraDetails = card.querySelectorAll('.extra-details');
                extraDetails.forEach(detail => {
                    detail.classList.toggle('collapse', !expanded);
                });
            });
        });

        const detailsToggles = document.querySelectorAll('.details-toggle');
        detailsToggles.forEach(btn => {
            btn.addEventListener('click', () => {
                const details = btn.nextElementSibling;
                const isOpen = details.classList.toggle('collapse');
            });
        });
    });
</script>

<style>
    /* --- Structure principale --- */
    .server-title {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background: #f8f8f8;
        padding: 1rem;
        font-size: 1.4rem;
        margin: 0;
        border-bottom: 2px solid #eee;
    }

    .dropdown-toggle {
        border: none;
        background: none;
        cursor: pointer;
        transition: transform 0.2s ease;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .dropdown-toggle svg {
        transition: transform 0.2s ease;
        transform: rotate(0deg);
    }

    /* --- Pok√©mon grid --- */
    .pokemon-grid {
        display: grid;
        grid-template-columns: repeat(6, 1fr);
        gap: 1rem;
        padding: 1rem;
        transition: all 0.3s ease;
    }

    /* Quand on clique -> passe en 2 colonnes */
    .pokemon-grid.compact {
        grid-template-columns: repeat(2, 1fr);
    }

    /* Media queries pour le responsive */
    @media (max-width: 1200px) {
        .pokemon-grid {
            grid-template-columns: repeat(3, 1fr);
        }
    }

    /* --- Pok√©mon individuel --- */
    .card-image {
        position: relative;
        background: linear-gradient(to bottom right, #fdf4e3, #f5d18c);
        border-radius: 0.8rem;
        padding: 1rem;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .pokemon-image {
        width: 100%;
        height: auto;
        max-width: 120px;
    }

    .pokemon-meta {
        text-align: center;
        font-size: 0.85rem;
        margin-top: 0.5rem;
    }

    .details-toggle {
        margin-top: 0.5rem;
        padding: 0.3rem 0.8rem;
        border: none;
        background: #f8f8f8;
        border-radius: 0.4rem;
        cursor: pointer;
        font-size: 0.8rem;
    }

    .extra-details {
        margin-top: 0.5rem;
        text-align: center;
        font-size: 0.8rem;
        transition: max-height 0.3s ease, opacity 0.3s ease;
        overflow: hidden;
        max-height: 200px;
        opacity: 1;
    }

    .extra-details.collapse {
        max-height: 0;
        opacity: 0;
    }
</style>