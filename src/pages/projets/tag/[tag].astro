---
import {getCollection} from "astro:content";
import Layout from "../../../layouts/Layout.astro";
import Title from "../../../assets/titles/nos-projet.webp"
import Banner from "../../../components/Banner.astro";
import {slugify} from "../../../formater/JoueurFormater";
import AreaTitle from "../../../components/AreaTitle.astro";

export async function getStaticPaths() {
    const articles = await getCollection("blog");

    // Récupère la liste de tous les tags uniques
    const tags = new Set(
        articles.flatMap((article) => article.data.tags ?? [])
    );

    return Array.from(tags).map((tag) => ({
        params: {tag},
        props: {tag},
    }));
}

const {tag} = Astro.props;
const articles = await getCollection("blog");

// Filtre par le tag donné dans l'URL
const filteredArticles = articles
    .filter((article) => article.data.tags?.includes(tag))
    .sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime());
---

<Layout title="Projets">
    <Banner bannerUrl={`/banner/minecraft/la_vanilla.webp`}/>
    <div class="page-title">
        <AreaTitle titleImage={Title} backgroundColor="#fffff"/>
    </div>

    <div class="projects-container">
        <ul class="projects-list">
            {filteredArticles.map((article) => (
                    <li class="project-card">
                        <img src={article.data.image} alt={article.data.title} class="featured-image"/>
                        <a href={`/projets/${slugify(article.data.title)}`}
                           class="project-title">{article.data.title}</a>
                        <p class="project-description">{article.data.description}</p>
                        <small class="project-date">{article.data.pubDate.toDateString()}</small>
                    </li>
            ))}
        </ul>
    </div>
</Layout>


<style>
    .page-title {
        margin-top: 50px;
        margin-bottom: 50px;
        align-items: center;
        display: flex;
        flex-direction: column;
    }

    .projects-container {
        margin: 0 auto;
        padding-left: 10rem;
        padding-right: 10rem;
    }

    .projects-list {
        display: grid;
        gap: 1.5rem;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        list-style: none;
        padding: 0;
    }

    .project-card {
        background: #fff;
        border-radius: 12px;
        padding: 1.25rem;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
        border: 1px solid #eee;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .project-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 6px 14px rgba(0, 0, 0, 0.1);
    }

    .featured-image {
        width: 100%;
        border-radius: 8px;
        margin-bottom: 1rem;
        aspect-ratio: 16 / 9;
        object-fit: cover;
    }

    .project-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: #1a1a1a;
        text-decoration: none;
        margin-bottom: 0.5rem;
        display: block;
    }

    .project-title:hover {
        animation: colorShift 3s ease-in-out infinite;
    }

    .project-description {
        color: #555;
        font-size: 1.1rem;
        margin-bottom: 0.5rem;
        line-height: 1.5;
    }

    .project-date {
        color: #888;
        font-size: 1rem;
    }

    @media (max-width: 768px) {
        .projects-container {
            padding: 1rem;
        }
    }

    @keyframes colorShift {
        0% {
            color: #FFDDA0;
        }
        33% {
            color: #FFB347;
        }
        66% {
            color: #FF8C42;
        }
        100% {
            color: #FFDDA0;
        }
    }

</style>