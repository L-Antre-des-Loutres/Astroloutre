---
import {slugify} from "../../../components/serveurs/serveurFormater";
import Layout from "../../../layouts/Layout.astro";
import Banner from "../../../components/Banner.astro";

// Type du serveur
type ServeurType = {
    id: number,
    nom: string,
    jeu: string,
    version: string,
    modpack: string,
    modpack_url: string,
    nom_monde: string,
    embed_color: string,
    actif: boolean,
    global: boolean,
    image: string,
    description: string,
    contenaire: string,
    type: string
};

type PlayTimeType = {
    serveur_id: number;
    total_hours: number;
}

// Le serveur est passé via getStaticPaths → props
const serveur: ServeurType | undefined = Astro.props.serveur;
const playTime: number | undefined = Astro.props.playTime;


// Génération des routes statiques pour chaque serveur
export async function getStaticPaths() {

    // On récupère la liste des serveurs
    const apiUrl = 'https://otterlyapi.antredesloutres.fr/api/serveurs/actif-global/minecraft';
    const response = await fetch(apiUrl);

    if (!response.ok) {
        throw new Error(`Failed to fetch servers: ${response.status}`);
    }

    const json = await response.json();

    // On vérifie si la requête est un succès
    if (!json.success) return

    // On récupère les informations dans les Data
    const serveurs = json.data ?? json;

    if (!Array.isArray(serveurs)) {
        throw new Error("Serveurs is not an array");
    }

    // On récupère le temps de jeu pour chaque serveur
    const apiUrlPlayTimePerServeur = "https://otterlyapi.antredesloutres.fr/api/joueurs/stats-serveur/serveurs-total-playtime-per-server"
    const responsePlayTimePerServeur = await fetch(apiUrlPlayTimePerServeur);

    if (!responsePlayTimePerServeur.ok) {
        throw new Error(`Failed to fetch servers: ${response.status}`);
    }

    const jsonPlayTimePerServeur = await responsePlayTimePerServeur.json();

    // On vérifie si la requête est un succès
    if (!jsonPlayTimePerServeur.success) return

    const playTimes : PlayTimeType[] = jsonPlayTimePerServeur.data;

    return serveurs.map((serveur) => {
        // Associe le playtime au serveur (par ID, nom ou autre clé logique)
        const playTime = playTimes.find(pt => pt.serveur_id === serveur.id);

        return {
            params: {
                nomDuServeur: slugify(serveur.nom),
            },
            props: {
                serveur,
                playTime: playTime ? playTime.total_hours : undefined,
            },
        };
    });
}
---
<Layout>
{!serveur && <h1>Serveur introuvable</h1>}
{serveur && (
        <Banner bannerUrl=`/banner/minecraft/${slugify(serveur.nom)}.webp`/>
        <div class="mx-auto px-6 py-8 backdrop-blur-md space-y-8">

            <!-- Titre du site et logo du jeu -->
            <div class="text-center">
                <h1 class="text-4xl font-extrabold tracking-tight">{serveur.nom}</h1>
                <img
                        src="https://www.minecraft.net/content/dam/minecraftnet/games/minecraft/logos/Global-Header_MCCB-Logo_300x51.svg"
                        alt="minecraft logo"
                        class="h-20 inline-block mt-1 max-w-full"
                />
            </div>

            <!-- Affichage de l'ip du serveur -->
            <div class="py-3">
                  <span class="inline-block bg-zinc-800 text-blue-400 px-4 py-2 rounded-full font-mono text-xs sm:text-sm md:text-base shadow-sm border border-zinc-700">
                    🌐 {serveur.jeu === "palworld" ? "antredesloutres.fr:8211" : serveur.type === "primary" ? "antredesloutres.fr" : "secondaire.antredesloutres.fr"}
                  </span>
            </div>

            {playTime !== undefined ? (
            <!-- Affichage du nombre d'heure joué sur ce serveur -->
            <div class="py-3">
                <span class="inline-block px-6 py-3 rounded-2xl bg-gradient-to-br from-blue-700/30 to-blue-500/20 backdrop-blur-md border border-blue-600/30 text-black font-semibold shadow-lg animate-fade-in-up">
                  ⏱️ {Math.floor(playTime / 72000)} heures de jeu sur ce serveur
                </span>
            </div>
            ) : (
                    <span class="inline-block px-6 py-3 rounded-2xl bg-gradient-to-br from-blue-700/30 to-blue-500/20 backdrop-blur-md border border-blue-600/30 text-black font-semibold shadow-lg animate-fade-in-up">
                        Temps de jeu non disponible
                    </span>
            )}

            <!-- Description du serveur -->
            <p class="text-lg leading-relaxed border-l-4 border-blue-500 pl-4 italic">{serveur.description}</p>

            <!-- Informations du serveur -->
            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 text-sm">
                <!-- Version du serveur -->
                <div class="rounded-lg p-4 shadow-inner border border-zinc-700">
                    <p>📦 <span class="font-semibold">Version :</span></p>
                    <p>{serveur.version}</p>
                </div>
                <!-- Modpack du serveur -->
                <div class="rounded-lg p-4 shadow-inner border border-zinc-700">
                    <p>🧰 <span class="font-semibold">Modpack :</span></p>
                    <a href={serveur.modpack_url} target="_blank" class="text-blue-400 hover:underline">
                        {serveur.modpack}
                    </a>
                </div>
                <!-- Statut du serveur -->
                <div class="rounded-lg p-4 shadow-inner border border-zinc-700">
                    <p>🟢 <span class="font-semibold ">Statut :</span></p>
                    <span class={`inline-block px-2 py-1 rounded-full text-xs font-semibold
                        ${serveur.actif ? 'bg-green-600 text-white' : 'bg-red-600 text-white'}`}>
                        {serveur.actif ? 'Actif' : 'Inactif'}
                    </span>
                </div>
            </div>

            <!-- Image du serveur -->
            <div class="overflow-hidden rounded-xl border border-zinc-800 shadow-lg">
                <img src={serveur.image} alt={`Image du serveur ${serveur.nom}`} class="object-cover w-full h-64 sm:h-150" />
            </div>

            <!-- Bouton de retour à la liste -->
            <div class="text-center mt-8">
                <a href="/serveurs/minecraft" class="inline-block bg-blue-600 hover:bg-blue-500 text-white px-6 py-2 rounded-lg shadow-md transition">
                    ← Retour à la liste des serveurs
                </a>
            </div>
        </div>
    )}
</Layout>